'use client';

import React from 'react';
import { FormProvider, useForm } from 'react-hook-form';
import { zodResolver } from '@hookform/resolvers/zod';
import toast from 'react-hot-toast';

import { registerUser } from '@/app/actions';
import { registerFormSchema } from '@/common/schemas';
import type { RegisterFormValues } from '../types';

import { FormInput } from '@/components/shared/form';
import { Button } from '@/components/ui';

interface Props {
  onClose: VoidFunction;
}

export const RegisterForm: React.FC<Props> = ({ onClose }) => {
  const form = useForm<RegisterFormValues>({
    resolver: zodResolver(registerFormSchema),
    mode: 'onBlur',
  });

  const onSubmit = async (values: RegisterFormValues) => {
    try {
      await registerUser({
        email: values.email,
        fullName: values.fullName,
        password: values.password,
      });

      toast.success('–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞! üìù\n–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —Å–≤–æ—é –ø–æ—á—Ç—É.', {
        icon: '‚úÖ',
      });

      onClose();
    } catch (error) {
      return toast.error('–ê–∫–∫–∞—É–Ω—Ç —Å —Ç–∞–∫–∏–º email —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!', {
        icon: '‚ùå',
      });
    }
  };

  return (
    <FormProvider {...form}>
      <form className="flex flex-col gap-5" onSubmit={form.handleSubmit(onSubmit)}>
        <FormInput name="email" label="E-mail" required />
        <FormInput name="fullName" label="–ü–æ–ª–Ω–æ–µ –∏–º—è" required />
        <FormInput name="password" label="–ü–∞—Ä–æ–ª—å" type="password" required />
        <FormInput
          name="confirmPassword"
          label="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å"
          type="password"
          required
        />
        <Button
          type="submit"
          className="h-12 text-base"
          loading={form.formState.isSubmitting}
        >
          –°–æ–∑–¥–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç
        </Button>
      </form>
    </FormProvider>
  );
};
